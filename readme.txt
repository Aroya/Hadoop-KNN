在Hadoop上实现分布式的KNN算法

code文件夹包含文件：
-----KNN.java
  |--基于Hadoop的分布式KNN实现
  |
  ---data
    |测试集与训练集的数据文件夹
    |
    ---train.txt
    |--训练集数据
    |
    ---test0.txt
    |--测试集数据 第0部分
    |
    ---test1.txt
    |--测试集数据 第1部分
    |
    ---test2.txt
    |--测试集数据 第2部分

//KNN.java
基于hadoop的KNN分布式实现，
默认训练集数据在hdfs的根目录下，对应代码在106行和110行
第一个输入的参数决定了测试集的读取位置，
第二个输入的参数决定了输出结果的位置。
在Mapper中，读取训练集数据，
算出当前Mapper的测试数据和训练集数据的所有距离，
取最近的k(默认是5)个训练集数据的FLAG传递给Reducer。
在Reducer中，接收到测试数据和对应的FLAG数据，
统计出出现次数最多的FLAG数据，
将出现次数最多的FLAG数据写出，供写结果的对象使用。


//data部分
训练集数据为以(0,0)和(1,1)分别为质心，
x和y最大误差为±0.5，各生成的10个随机数，
最后一列的FLAG表示分类，
0:(0,0)，1:(1,1)
数据格式{x, '\t', y, '\t', FLAG}

测试集数据为以(0.5,0.5)为质心，
x和y的最大误差为±0.5，生成的13个随机数
为了能够分布式运算，分为了3个文件，
各对应一个计算节点
最后一列为期望的结果，也就是根据和(0,0)和(1,1)的距离，
判断出的正确的FLAG数据
数据格式{x, '\t', y, '\t', FLAG}

运行环境:
虚拟机:
    虚拟机数量:
        3台
    软件环境:
        Ubuntu 14.04.4 LTS (GNU/Linux 4.2.0-27-generic x86_64)
        JDK 1.8.0_60 (build 1.8.0_60-b27)
        Hadoop 2.6.0
    硬件环境:
        1 Intel(R) Core(TM) i7-4700MQ CPU @ 2.40GHz
        1 GB DDR3 1600MHz SDRAM